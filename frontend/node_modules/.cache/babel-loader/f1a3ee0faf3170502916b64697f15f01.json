{"ast":null,"code":"/**\n * @typedef {import('mdast').BlockContent} BlockContent\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('./index.js').H} H\n */\nimport { sanitizeUri } from 'micromark-util-sanitize-uri';\nimport { u } from 'unist-builder';\nimport { all } from './traverse.js';\nimport { wrap } from './wrap.js';\n/**\n * @param {H} h\n */\n\nexport function footer(h) {\n  let index = -1;\n  /** @type {Array<ElementContent>} */\n\n  const listItems = [];\n\n  while (++index < h.footnoteOrder.length) {\n    const def = h.footnoteById[h.footnoteOrder[index].toUpperCase()];\n\n    if (!def) {\n      continue;\n    }\n\n    const content = all(h, def);\n    const id = String(def.identifier);\n    const safeId = sanitizeUri(id.toLowerCase());\n    let referenceIndex = 0;\n    /** @type {Array<ElementContent>} */\n\n    const backReferences = [];\n\n    while (++referenceIndex <= h.footnoteCounts[id]) {\n      /** @type {Element} */\n      const backReference = {\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href: '#' + h.clobberPrefix + 'fnref-' + safeId + (referenceIndex > 1 ? '-' + referenceIndex : ''),\n          dataFootnoteBackref: true,\n          className: ['data-footnote-backref'],\n          ariaLabel: h.footnoteBackLabel\n        },\n        children: [{\n          type: 'text',\n          value: '↩'\n        }]\n      };\n\n      if (referenceIndex > 1) {\n        backReference.children.push({\n          type: 'element',\n          tagName: 'sup',\n          children: [{\n            type: 'text',\n            value: String(referenceIndex)\n          }]\n        });\n      }\n\n      if (backReferences.length > 0) {\n        backReferences.push({\n          type: 'text',\n          value: ' '\n        });\n      }\n\n      backReferences.push(backReference);\n    }\n\n    const tail = content[content.length - 1];\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1];\n\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' ';\n      } else {\n        tail.children.push({\n          type: 'text',\n          value: ' '\n        });\n      }\n\n      tail.children.push(...backReferences);\n    } else {\n      content.push(...backReferences);\n    }\n    /** @type {Element} */\n\n\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {\n        id: h.clobberPrefix + 'fn-' + safeId\n      },\n      children: wrap(content, true)\n    };\n\n    if (def.position) {\n      listItem.position = def.position;\n    }\n\n    listItems.push(listItem);\n  }\n\n  if (listItems.length === 0) {\n    return null;\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {\n      dataFootnotes: true,\n      className: ['footnotes']\n    },\n    children: [{\n      type: 'element',\n      tagName: 'h2',\n      properties: {\n        id: 'footnote-label',\n        className: ['sr-only']\n      },\n      children: [u('text', h.footnoteLabel)]\n    }, {\n      type: 'text',\n      value: '\\n'\n    }, {\n      type: 'element',\n      tagName: 'ol',\n      properties: {},\n      children: wrap(listItems, true)\n    }, {\n      type: 'text',\n      value: '\\n'\n    }]\n  };\n}","map":{"version":3,"sources":["/Users/sangram/Documents/OSI/testlab/squidex-samples/jscript/react/sample-hotels/node_modules/mdast-util-to-hast/lib/footer.js"],"names":["sanitizeUri","u","all","wrap","footer","h","index","listItems","footnoteOrder","length","def","footnoteById","toUpperCase","content","id","String","identifier","safeId","toLowerCase","referenceIndex","backReferences","footnoteCounts","backReference","type","tagName","properties","href","clobberPrefix","dataFootnoteBackref","className","ariaLabel","footnoteBackLabel","children","value","push","tail","tailTail","listItem","position","dataFootnotes","footnoteLabel"],"mappings":"AAAA;;;;;;;AAQA,SAAQA,WAAR,QAA0B,6BAA1B;AACA,SAAQC,CAAR,QAAgB,eAAhB;AACA,SAAQC,GAAR,QAAkB,eAAlB;AACA,SAAQC,IAAR,QAAmB,WAAnB;AAEA;;;;AAGA,OAAO,SAASC,MAAT,CAAgBC,CAAhB,EAAmB;AACxB,MAAIC,KAAK,GAAG,CAAC,CAAb;AACA;;AACA,QAAMC,SAAS,GAAG,EAAlB;;AAEA,SAAO,EAAED,KAAF,GAAUD,CAAC,CAACG,aAAF,CAAgBC,MAAjC,EAAyC;AACvC,UAAMC,GAAG,GAAGL,CAAC,CAACM,YAAF,CAAeN,CAAC,CAACG,aAAF,CAAgBF,KAAhB,EAAuBM,WAAvB,EAAf,CAAZ;;AAEA,QAAI,CAACF,GAAL,EAAU;AACR;AACD;;AAED,UAAMG,OAAO,GAAGX,GAAG,CAACG,CAAD,EAAIK,GAAJ,CAAnB;AACA,UAAMI,EAAE,GAAGC,MAAM,CAACL,GAAG,CAACM,UAAL,CAAjB;AACA,UAAMC,MAAM,GAAGjB,WAAW,CAACc,EAAE,CAACI,WAAH,EAAD,CAA1B;AACA,QAAIC,cAAc,GAAG,CAArB;AACA;;AACA,UAAMC,cAAc,GAAG,EAAvB;;AAEA,WAAO,EAAED,cAAF,IAAoBd,CAAC,CAACgB,cAAF,CAAiBP,EAAjB,CAA3B,EAAiD;AAC/C;AACA,YAAMQ,aAAa,GAAG;AACpBC,QAAAA,IAAI,EAAE,SADc;AAEpBC,QAAAA,OAAO,EAAE,GAFW;AAGpBC,QAAAA,UAAU,EAAE;AACVC,UAAAA,IAAI,EACF,MACArB,CAAC,CAACsB,aADF,GAEA,QAFA,GAGAV,MAHA,IAICE,cAAc,GAAG,CAAjB,GAAqB,MAAMA,cAA3B,GAA4C,EAJ7C,CAFQ;AAOVS,UAAAA,mBAAmB,EAAE,IAPX;AAQVC,UAAAA,SAAS,EAAE,CAAC,uBAAD,CARD;AASVC,UAAAA,SAAS,EAAEzB,CAAC,CAAC0B;AATH,SAHQ;AAcpBC,QAAAA,QAAQ,EAAE,CAAC;AAACT,UAAAA,IAAI,EAAE,MAAP;AAAeU,UAAAA,KAAK,EAAE;AAAtB,SAAD;AAdU,OAAtB;;AAiBA,UAAId,cAAc,GAAG,CAArB,EAAwB;AACtBG,QAAAA,aAAa,CAACU,QAAd,CAAuBE,IAAvB,CAA4B;AAC1BX,UAAAA,IAAI,EAAE,SADoB;AAE1BC,UAAAA,OAAO,EAAE,KAFiB;AAG1BQ,UAAAA,QAAQ,EAAE,CAAC;AAACT,YAAAA,IAAI,EAAE,MAAP;AAAeU,YAAAA,KAAK,EAAElB,MAAM,CAACI,cAAD;AAA5B,WAAD;AAHgB,SAA5B;AAKD;;AAED,UAAIC,cAAc,CAACX,MAAf,GAAwB,CAA5B,EAA+B;AAC7BW,QAAAA,cAAc,CAACc,IAAf,CAAoB;AAACX,UAAAA,IAAI,EAAE,MAAP;AAAeU,UAAAA,KAAK,EAAE;AAAtB,SAApB;AACD;;AAEDb,MAAAA,cAAc,CAACc,IAAf,CAAoBZ,aAApB;AACD;;AAED,UAAMa,IAAI,GAAGtB,OAAO,CAACA,OAAO,CAACJ,MAAR,GAAiB,CAAlB,CAApB;;AAEA,QAAI0B,IAAI,IAAIA,IAAI,CAACZ,IAAL,KAAc,SAAtB,IAAmCY,IAAI,CAACX,OAAL,KAAiB,GAAxD,EAA6D;AAC3D,YAAMY,QAAQ,GAAGD,IAAI,CAACH,QAAL,CAAcG,IAAI,CAACH,QAAL,CAAcvB,MAAd,GAAuB,CAArC,CAAjB;;AACA,UAAI2B,QAAQ,IAAIA,QAAQ,CAACb,IAAT,KAAkB,MAAlC,EAA0C;AACxCa,QAAAA,QAAQ,CAACH,KAAT,IAAkB,GAAlB;AACD,OAFD,MAEO;AACLE,QAAAA,IAAI,CAACH,QAAL,CAAcE,IAAd,CAAmB;AAACX,UAAAA,IAAI,EAAE,MAAP;AAAeU,UAAAA,KAAK,EAAE;AAAtB,SAAnB;AACD;;AAEDE,MAAAA,IAAI,CAACH,QAAL,CAAcE,IAAd,CAAmB,GAAGd,cAAtB;AACD,KATD,MASO;AACLP,MAAAA,OAAO,CAACqB,IAAR,CAAa,GAAGd,cAAhB;AACD;AAED;;;AACA,UAAMiB,QAAQ,GAAG;AACfd,MAAAA,IAAI,EAAE,SADS;AAEfC,MAAAA,OAAO,EAAE,IAFM;AAGfC,MAAAA,UAAU,EAAE;AAACX,QAAAA,EAAE,EAAET,CAAC,CAACsB,aAAF,GAAkB,KAAlB,GAA0BV;AAA/B,OAHG;AAIfe,MAAAA,QAAQ,EAAE7B,IAAI,CAACU,OAAD,EAAU,IAAV;AAJC,KAAjB;;AAOA,QAAIH,GAAG,CAAC4B,QAAR,EAAkB;AAChBD,MAAAA,QAAQ,CAACC,QAAT,GAAoB5B,GAAG,CAAC4B,QAAxB;AACD;;AAED/B,IAAAA,SAAS,CAAC2B,IAAV,CAAeG,QAAf;AACD;;AAED,MAAI9B,SAAS,CAACE,MAAV,KAAqB,CAAzB,EAA4B;AAC1B,WAAO,IAAP;AACD;;AAED,SAAO;AACLc,IAAAA,IAAI,EAAE,SADD;AAELC,IAAAA,OAAO,EAAE,SAFJ;AAGLC,IAAAA,UAAU,EAAE;AAACc,MAAAA,aAAa,EAAE,IAAhB;AAAsBV,MAAAA,SAAS,EAAE,CAAC,WAAD;AAAjC,KAHP;AAILG,IAAAA,QAAQ,EAAE,CACR;AACET,MAAAA,IAAI,EAAE,SADR;AAEEC,MAAAA,OAAO,EAAE,IAFX;AAGEC,MAAAA,UAAU,EAAE;AAACX,QAAAA,EAAE,EAAE,gBAAL;AAAuBe,QAAAA,SAAS,EAAE,CAAC,SAAD;AAAlC,OAHd;AAIEG,MAAAA,QAAQ,EAAE,CAAC/B,CAAC,CAAC,MAAD,EAASI,CAAC,CAACmC,aAAX,CAAF;AAJZ,KADQ,EAOR;AAACjB,MAAAA,IAAI,EAAE,MAAP;AAAeU,MAAAA,KAAK,EAAE;AAAtB,KAPQ,EAQR;AACEV,MAAAA,IAAI,EAAE,SADR;AAEEC,MAAAA,OAAO,EAAE,IAFX;AAGEC,MAAAA,UAAU,EAAE,EAHd;AAIEO,MAAAA,QAAQ,EAAE7B,IAAI,CAACI,SAAD,EAAY,IAAZ;AAJhB,KARQ,EAcR;AAACgB,MAAAA,IAAI,EAAE,MAAP;AAAeU,MAAAA,KAAK,EAAE;AAAtB,KAdQ;AAJL,GAAP;AAqBD","sourcesContent":["/**\n * @typedef {import('mdast').BlockContent} BlockContent\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('./index.js').H} H\n */\n\nimport {sanitizeUri} from 'micromark-util-sanitize-uri'\nimport {u} from 'unist-builder'\nimport {all} from './traverse.js'\nimport {wrap} from './wrap.js'\n\n/**\n * @param {H} h\n */\nexport function footer(h) {\n  let index = -1\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n\n  while (++index < h.footnoteOrder.length) {\n    const def = h.footnoteById[h.footnoteOrder[index].toUpperCase()]\n\n    if (!def) {\n      continue\n    }\n\n    const content = all(h, def)\n    const id = String(def.identifier)\n    const safeId = sanitizeUri(id.toLowerCase())\n    let referenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n\n    while (++referenceIndex <= h.footnoteCounts[id]) {\n      /** @type {Element} */\n      const backReference = {\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            h.clobberPrefix +\n            'fnref-' +\n            safeId +\n            (referenceIndex > 1 ? '-' + referenceIndex : ''),\n          dataFootnoteBackref: true,\n          className: ['data-footnote-backref'],\n          ariaLabel: h.footnoteBackLabel\n        },\n        children: [{type: 'text', value: '↩'}]\n      }\n\n      if (referenceIndex > 1) {\n        backReference.children.push({\n          type: 'element',\n          tagName: 'sup',\n          children: [{type: 'text', value: String(referenceIndex)}]\n        })\n      }\n\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      backReferences.push(backReference)\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: h.clobberPrefix + 'fn-' + safeId},\n      children: wrap(content, true)\n    }\n\n    if (def.position) {\n      listItem.position = def.position\n    }\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return null\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: 'h2',\n        properties: {id: 'footnote-label', className: ['sr-only']},\n        children: [u('text', h.footnoteLabel)]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n"]},"metadata":{},"sourceType":"module"}