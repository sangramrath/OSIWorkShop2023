{"ast":null,"code":"import _slicedToArray from \"/Users/sangram/Documents/OSI/testlab/squidex-samples/jscript/react/sample-hotels/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/sangram/Documents/OSI/testlab/squidex-samples/jscript/react/sample-hotels/src/components/PostSite.jsx\";\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Post } from './Post';\nimport { getPost, getPostsIds } from '../service';\nimport { useRefresh } from './hooks';\nexport const PostSite = () => {\n  const _useParams = useParams(),\n        id = _useParams.id;\n\n  const _React$useState = React.useState(undefined),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        post = _React$useState2[0],\n        setPost = _React$useState2[1];\n\n  const needsUpdate = useRefresh(getPostsIds([post.id]));\n  React.useEffect(() => {\n    async function fetchData() {\n      try {\n        const result = await getPost(id);\n        setPost(result);\n      } catch (ex) {\n        setPost(null);\n      }\n    }\n\n    fetchData();\n  }, [id, needsUpdate]);\n\n  if (post) {\n    return React.createElement(Post, {\n      post: post,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    });\n  } else if (post === null) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Post not found.\");\n  } else {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Loading Post...\");\n  }\n};","map":{"version":3,"sources":["/Users/sangram/Documents/OSI/testlab/squidex-samples/jscript/react/sample-hotels/src/components/PostSite.jsx"],"names":["React","useParams","Post","getPost","getPostsIds","useRefresh","PostSite","id","useState","undefined","post","setPost","needsUpdate","useEffect","fetchData","result","ex"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,YAArC;AACA,SAASC,UAAT,QAA2B,SAA3B;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA,qBACXL,SAAS,EADE;AAAA,QAClBM,EADkB,cAClBA,EADkB;;AAAA,0BAGFP,KAAK,CAACQ,QAAN,CAAeC,SAAf,CAHE;AAAA;AAAA,QAGnBC,IAHmB;AAAA,QAGbC,OAHa;;AAI1B,QAAMC,WAAW,GAAGP,UAAU,CAACD,WAAW,CAAC,CAACM,IAAI,CAACH,EAAN,CAAD,CAAZ,CAA9B;AAEAP,EAAAA,KAAK,CAACa,SAAN,CAAgB,MAAM;AAClB,mBAAeC,SAAf,GAA2B;AACvB,UAAI;AACA,cAAMC,MAAM,GAAG,MAAMZ,OAAO,CAACI,EAAD,CAA5B;AAEAI,QAAAA,OAAO,CAACI,MAAD,CAAP;AACH,OAJD,CAIE,OAAOC,EAAP,EAAW;AACTL,QAAAA,OAAO,CAAC,IAAD,CAAP;AACH;AACJ;;AAEDG,IAAAA,SAAS;AACZ,GAZD,EAYG,CAACP,EAAD,EAAKK,WAAL,CAZH;;AAcA,MAAIF,IAAJ,EAAU;AACN,WAAO,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAEA,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAFD,MAEO,IAAIA,IAAI,KAAK,IAAb,EAAmB;AACtB,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAP;AACH,GAFM,MAEA;AACH,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAP;AACH;AACJ,CA3BM","sourcesContent":["import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Post } from './Post';\nimport { getPost, getPostsIds } from '../service';\nimport { useRefresh } from './hooks';\n\nexport const PostSite = () => {\n    const { id } = useParams();\n\n    const [post, setPost] = React.useState(undefined);\n    const needsUpdate = useRefresh(getPostsIds([post.id]));\n\n    React.useEffect(() => {\n        async function fetchData() {\n            try {\n                const result = await getPost(id);\n        \n                setPost(result);\n            } catch (ex) {\n                setPost(null);\n            }\n        }\n\n        fetchData();\n    }, [id, needsUpdate]);\n\n    if (post) {\n        return <Post post={post} />\n    } else if (post === null) {\n        return <div>Post not found.</div>\n    } else {\n        return <div>Loading Post...</div>\n    }\n}\n"]},"metadata":{},"sourceType":"module"}