{"ast":null,"code":"import _slicedToArray from \"/Users/sangram/Documents/OSI/testlab/squidex-samples/jscript/react/sample-hotels/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/sangram/Documents/OSI/testlab/squidex-samples/jscript/react/sample-hotels/src/components/HotelSite.jsx\";\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Hotel } from './Hotel';\nimport { getHotel } from '../service';\nimport { useRefresh } from './hooks';\nexport const HotelSite = () => {\n  const _useParams = useParams(),\n        id = _useParams.id;\n\n  const _React$useState = React.useState(undefined),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        hotel = _React$useState2[0],\n        setHotel = _React$useState2[1];\n\n  const needsUpdate = useRefresh([hotel === null || hotel === void 0 ? void 0 : hotel.id]);\n  React.useEffect(() => {\n    async function fetchData() {\n      try {\n        const result = await getHotel(id);\n        setHotel(result);\n      } catch (ex) {\n        setHotel(null);\n      }\n    }\n\n    fetchData();\n  }, [id, needsUpdate]);\n\n  if (hotel) {\n    return React.createElement(Hotel, {\n      hotel: hotel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    });\n  } else if (hotel === null) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Hotel not found.\");\n  } else {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Loading Hotel...\");\n  }\n};","map":{"version":3,"sources":["/Users/sangram/Documents/OSI/testlab/squidex-samples/jscript/react/sample-hotels/src/components/HotelSite.jsx"],"names":["React","useParams","Hotel","getHotel","useRefresh","HotelSite","id","useState","undefined","hotel","setHotel","needsUpdate","useEffect","fetchData","result","ex"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,KAAT,QAAsB,SAAtB;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,UAAT,QAA2B,SAA3B;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAAA,qBACZJ,SAAS,EADG;AAAA,QACnBK,EADmB,cACnBA,EADmB;;AAAA,0BAGDN,KAAK,CAACO,QAAN,CAAeC,SAAf,CAHC;AAAA;AAAA,QAGpBC,KAHoB;AAAA,QAGbC,QAHa;;AAI3B,QAAMC,WAAW,GAAGP,UAAU,CAAC,CAACK,KAAD,aAACA,KAAD,uBAACA,KAAK,CAAEH,EAAR,CAAD,CAA9B;AAEAN,EAAAA,KAAK,CAACY,SAAN,CAAgB,MAAM;AAClB,mBAAeC,SAAf,GAA2B;AACvB,UAAI;AACA,cAAMC,MAAM,GAAG,MAAMX,QAAQ,CAACG,EAAD,CAA7B;AAEAI,QAAAA,QAAQ,CAACI,MAAD,CAAR;AACH,OAJD,CAIE,OAAOC,EAAP,EAAW;AACTL,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACH;AACJ;;AAEDG,IAAAA,SAAS;AACZ,GAZD,EAYG,CAACP,EAAD,EAAKK,WAAL,CAZH;;AAcA,MAAIF,KAAJ,EAAW;AACP,WAAO,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAEA,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAFD,MAEO,IAAIA,KAAK,KAAK,IAAd,EAAoB;AACvB,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAP;AACH,GAFM,MAEA;AACH,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAP;AACH;AACJ,CA3BM","sourcesContent":["import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Hotel } from './Hotel';\nimport { getHotel } from '../service';\nimport { useRefresh } from './hooks';\n\nexport const HotelSite = () => {\n    const { id } = useParams();\n\n    const [hotel, setHotel] = React.useState(undefined);\n    const needsUpdate = useRefresh([hotel?.id]);\n\n    React.useEffect(() => {\n        async function fetchData() {\n            try {\n                const result = await getHotel(id);\n        \n                setHotel(result);\n            } catch (ex) {\n                setHotel(null);\n            }\n        }\n\n        fetchData();\n    }, [id, needsUpdate]);\n\n    if (hotel) {\n        return <Hotel hotel={hotel} />\n    } else if (hotel === null) {\n        return <div>Hotel not found.</div>\n    } else {\n        return <div>Loading Hotel...</div>\n    }\n}\n"]},"metadata":{},"sourceType":"module"}