{"ast":null,"code":"/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../index.js').Handler} Handler\n */\nimport { sanitizeUri } from 'micromark-util-sanitize-uri';\nimport { u } from 'unist-builder';\n/**\n * @type {Handler}\n * @param {FootnoteReference} node\n */\n\nexport function footnoteReference(h, node) {\n  const id = String(node.identifier);\n  const safeId = sanitizeUri(id.toLowerCase());\n  const index = h.footnoteOrder.indexOf(id);\n  /** @type {number} */\n\n  let counter;\n\n  if (index === -1) {\n    h.footnoteOrder.push(id);\n    h.footnoteCounts[id] = 1;\n    counter = h.footnoteOrder.length;\n  } else {\n    h.footnoteCounts[id]++;\n    counter = index + 1;\n  }\n\n  const reuseCounter = h.footnoteCounts[id];\n  return h(node, 'sup', [h(node.position, 'a', {\n    href: '#' + h.clobberPrefix + 'fn-' + safeId,\n    id: h.clobberPrefix + 'fnref-' + safeId + (reuseCounter > 1 ? '-' + reuseCounter : ''),\n    dataFootnoteRef: true,\n    ariaDescribedBy: 'footnote-label'\n  }, [u('text', String(counter))])]);\n}","map":{"version":3,"sources":["/Users/sangram/Documents/OSI/testlab/squidex-samples/jscript/react/sample-hotels/node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js"],"names":["sanitizeUri","u","footnoteReference","h","node","id","String","identifier","safeId","toLowerCase","index","footnoteOrder","indexOf","counter","push","footnoteCounts","length","reuseCounter","position","href","clobberPrefix","dataFootnoteRef","ariaDescribedBy"],"mappings":"AAAA;;;;AAKA,SAAQA,WAAR,QAA0B,6BAA1B;AACA,SAAQC,CAAR,QAAgB,eAAhB;AAEA;;;;;AAIA,OAAO,SAASC,iBAAT,CAA2BC,CAA3B,EAA8BC,IAA9B,EAAoC;AACzC,QAAMC,EAAE,GAAGC,MAAM,CAACF,IAAI,CAACG,UAAN,CAAjB;AACA,QAAMC,MAAM,GAAGR,WAAW,CAACK,EAAE,CAACI,WAAH,EAAD,CAA1B;AACA,QAAMC,KAAK,GAAGP,CAAC,CAACQ,aAAF,CAAgBC,OAAhB,CAAwBP,EAAxB,CAAd;AACA;;AACA,MAAIQ,OAAJ;;AAEA,MAAIH,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChBP,IAAAA,CAAC,CAACQ,aAAF,CAAgBG,IAAhB,CAAqBT,EAArB;AACAF,IAAAA,CAAC,CAACY,cAAF,CAAiBV,EAAjB,IAAuB,CAAvB;AACAQ,IAAAA,OAAO,GAAGV,CAAC,CAACQ,aAAF,CAAgBK,MAA1B;AACD,GAJD,MAIO;AACLb,IAAAA,CAAC,CAACY,cAAF,CAAiBV,EAAjB;AACAQ,IAAAA,OAAO,GAAGH,KAAK,GAAG,CAAlB;AACD;;AAED,QAAMO,YAAY,GAAGd,CAAC,CAACY,cAAF,CAAiBV,EAAjB,CAArB;AAEA,SAAOF,CAAC,CAACC,IAAD,EAAO,KAAP,EAAc,CACpBD,CAAC,CACCC,IAAI,CAACc,QADN,EAEC,GAFD,EAGC;AACEC,IAAAA,IAAI,EAAE,MAAMhB,CAAC,CAACiB,aAAR,GAAwB,KAAxB,GAAgCZ,MADxC;AAEEH,IAAAA,EAAE,EACAF,CAAC,CAACiB,aAAF,GACA,QADA,GAEAZ,MAFA,IAGCS,YAAY,GAAG,CAAf,GAAmB,MAAMA,YAAzB,GAAwC,EAHzC,CAHJ;AAOEI,IAAAA,eAAe,EAAE,IAPnB;AAQEC,IAAAA,eAAe,EAAE;AARnB,GAHD,EAaC,CAACrB,CAAC,CAAC,MAAD,EAASK,MAAM,CAACO,OAAD,CAAf,CAAF,CAbD,CADmB,CAAd,CAAR;AAiBD","sourcesContent":["/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {sanitizeUri} from 'micromark-util-sanitize-uri'\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {FootnoteReference} node\n */\nexport function footnoteReference(h, node) {\n  const id = String(node.identifier)\n  const safeId = sanitizeUri(id.toLowerCase())\n  const index = h.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  if (index === -1) {\n    h.footnoteOrder.push(id)\n    h.footnoteCounts[id] = 1\n    counter = h.footnoteOrder.length\n  } else {\n    h.footnoteCounts[id]++\n    counter = index + 1\n  }\n\n  const reuseCounter = h.footnoteCounts[id]\n\n  return h(node, 'sup', [\n    h(\n      node.position,\n      'a',\n      {\n        href: '#' + h.clobberPrefix + 'fn-' + safeId,\n        id:\n          h.clobberPrefix +\n          'fnref-' +\n          safeId +\n          (reuseCounter > 1 ? '-' + reuseCounter : ''),\n        dataFootnoteRef: true,\n        ariaDescribedBy: 'footnote-label'\n      },\n      [u('text', String(counter))]\n    )\n  ])\n}\n"]},"metadata":{},"sourceType":"module"}