{"ast":null,"code":"import _slicedToArray from \"/Users/sangram/Documents/OSI/testlab/squidex-samples/jscript/react/sample-hotels/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/sangram/Documents/OSI/testlab/squidex-samples/jscript/react/sample-hotels/src/components/PageSite.jsx\";\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Page } from './Page';\nimport { getPage } from '../service';\nimport { useRefresh } from './hooks';\nexport const PageSite = () => {\n  const _useParams = useParams(),\n        slug = _useParams.slug;\n\n  const _React$useState = React.useState(undefined),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        page = _React$useState2[0],\n        setPage = _React$useState2[1];\n\n  const needsUpdate = useRefresh([page === null || page === void 0 ? void 0 : page.id]);\n  React.useEffect(() => {\n    setPage(undefined);\n\n    async function fetchData() {\n      try {\n        const result = await getPage(slug);\n        setPage(result);\n      } catch (ex) {\n        setPage(null);\n      }\n    }\n\n    fetchData();\n  }, [needsUpdate, slug]);\n\n  if (page) {\n    return React.createElement(Page, {\n      page: page,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    });\n  } else if (page === null) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Page not found.\");\n  } else {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Loading Page...\");\n  }\n};","map":{"version":3,"sources":["/Users/sangram/Documents/OSI/testlab/squidex-samples/jscript/react/sample-hotels/src/components/PageSite.jsx"],"names":["React","useParams","Page","getPage","useRefresh","PageSite","slug","useState","undefined","page","setPage","needsUpdate","id","useEffect","fetchData","result","ex"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,SAASC,UAAT,QAA2B,SAA3B;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA,qBACTJ,SAAS,EADA;AAAA,QAClBK,IADkB,cAClBA,IADkB;;AAAA,0BAGFN,KAAK,CAACO,QAAN,CAAeC,SAAf,CAHE;AAAA;AAAA,QAGnBC,IAHmB;AAAA,QAGbC,OAHa;;AAI1B,QAAMC,WAAW,GAAGP,UAAU,CAAC,CAACK,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEG,EAAP,CAAD,CAA9B;AAEAZ,EAAAA,KAAK,CAACa,SAAN,CAAgB,MAAM;AAClBH,IAAAA,OAAO,CAACF,SAAD,CAAP;;AAEA,mBAAeM,SAAf,GAA2B;AACvB,UAAI;AACA,cAAMC,MAAM,GAAG,MAAMZ,OAAO,CAACG,IAAD,CAA5B;AAEAI,QAAAA,OAAO,CAACK,MAAD,CAAP;AACH,OAJD,CAIE,OAAOC,EAAP,EAAW;AACTN,QAAAA,OAAO,CAAC,IAAD,CAAP;AACH;AACJ;;AAEDI,IAAAA,SAAS;AACZ,GAdD,EAcG,CAACH,WAAD,EAAcL,IAAd,CAdH;;AAgBA,MAAIG,IAAJ,EAAU;AACN,WAAO,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAEA,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAFD,MAEO,IAAIA,IAAI,KAAK,IAAb,EAAmB;AACtB,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAP;AACH,GAFM,MAEA;AACH,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAP;AACH;AACJ,CA7BM","sourcesContent":["import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Page } from './Page';\nimport { getPage } from '../service';\nimport { useRefresh } from './hooks';\n\nexport const PageSite = () => {\n    const { slug } = useParams();\n\n    const [page, setPage] = React.useState(undefined);\n    const needsUpdate = useRefresh([page?.id]);\n\n    React.useEffect(() => {\n        setPage(undefined);\n\n        async function fetchData() {\n            try {\n                const result = await getPage(slug);\n        \n                setPage(result);\n            } catch (ex) {\n                setPage(null);\n            }\n        }\n\n        fetchData();\n    }, [needsUpdate, slug]);\n\n    if (page) {\n        return <Page page={page} />\n    } else if (page === null) {\n        return <div>Page not found.</div>\n    } else {\n        return <div>Loading Page...</div>\n    }\n}\n"]},"metadata":{},"sourceType":"module"}