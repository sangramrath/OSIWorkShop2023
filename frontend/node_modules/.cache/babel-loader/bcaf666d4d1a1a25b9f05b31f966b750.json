{"ast":null,"code":"import _slicedToArray from \"/Users/sangram/Documents/OSI/testlab/squidex-samples/jscript/react/sample-hotels/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/sangram/Documents/OSI/testlab/squidex-samples/jscript/react/sample-hotels/src/components/HotelsSite.jsx\";\nimport React from 'react';\nimport { Hotel } from './Hotel';\nimport { getHotels } from './../service';\nimport { useRefresh } from './hooks';\nexport const HotelsSite = () => {\n  const _React$useState = React.useState(),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        hotels = _React$useState2[0],\n        setHotels = _React$useState2[1];\n\n  const needsUpdate = useRefresh(hotels === null || hotels === void 0 ? void 0 : hotels.map(x => x.id));\n  React.useEffect(() => {\n    async function fetchData() {\n      const results = await getHotels();\n      setHotels(results.items);\n    }\n\n    fetchData();\n  }, [needsUpdate]);\n\n  if (!hotels) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"Loading Hotels...\");\n  }\n\n  return React.createElement(React.Fragment, null, hotels.length === 0 ? React.createElement(React.Fragment, null, \"No Hotel found\") : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, hotels.map(hotel => React.createElement(\"div\", {\n    key: hotel.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Hotel, {\n    key: hotel.id,\n    hotel: hotel,\n    withLink: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })))));\n};","map":{"version":3,"sources":["/Users/sangram/Documents/OSI/testlab/squidex-samples/jscript/react/sample-hotels/src/components/HotelsSite.jsx"],"names":["React","Hotel","getHotels","useRefresh","HotelsSite","useState","hotels","setHotels","needsUpdate","map","x","id","useEffect","fetchData","results","items","length","hotel"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,SAAtB;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,UAAT,QAA2B,SAA3B;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAAA,0BACAJ,KAAK,CAACK,QAAN,EADA;AAAA;AAAA,QACrBC,MADqB;AAAA,QACbC,SADa;;AAE5B,QAAMC,WAAW,GAAGL,UAAU,CAACG,MAAD,aAACA,MAAD,uBAACA,MAAM,CAAEG,GAAR,CAAYC,CAAC,IAAIA,CAAC,CAACC,EAAnB,CAAD,CAA9B;AAEAX,EAAAA,KAAK,CAACY,SAAN,CAAgB,MAAM;AAClB,mBAAeC,SAAf,GAA2B;AACvB,YAAMC,OAAO,GAAG,MAAMZ,SAAS,EAA/B;AAEAK,MAAAA,SAAS,CAACO,OAAO,CAACC,KAAT,CAAT;AACH;;AAEDF,IAAAA,SAAS;AACZ,GARD,EAQG,CAACL,WAAD,CARH;;AAUA,MAAI,CAACF,MAAL,EAAa;AACT,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAP;AACH;;AAED,SACI,0CACKA,MAAM,CAACU,MAAP,KAAkB,CAAlB,GACG,2DADH,GAGG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKV,MAAM,CAACG,GAAP,CAAWQ,KAAK,IACb;AAAK,IAAA,GAAG,EAAEA,KAAK,CAACN,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAEM,KAAK,CAACN,EAAlB;AAAsB,IAAA,KAAK,EAAEM,KAA7B;AAAoC,IAAA,QAAQ,EAAE,IAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADH,CADL,CAJR,CADJ;AAiBH,CAnCM","sourcesContent":["import React from 'react';\nimport { Hotel } from './Hotel';\nimport { getHotels } from './../service';\nimport { useRefresh } from './hooks';\n\nexport const HotelsSite = () => {\n    const [hotels, setHotels] = React.useState();\n    const needsUpdate = useRefresh(hotels?.map(x => x.id));\n\n    React.useEffect(() => {\n        async function fetchData() {\n            const results = await getHotels();\n\n            setHotels(results.items);\n        }\n\n        fetchData();\n    }, [needsUpdate]);\n\n    if (!hotels) {\n        return <div>Loading Hotels...</div>\n    }\n\n    return (\n        <>\n            {hotels.length === 0 ? (\n                <>No Hotel found</>\n            ) : (\n                <div>\n                    {hotels.map(hotel => (\n                        <div key={hotel.id}>\n                            <Hotel key={hotel.id} hotel={hotel} withLink={true} />\n\n                            <hr />\n                        </div>\n                    ))}\n                </div>\n            )}\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}